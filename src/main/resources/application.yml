logging:
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.data: TRACE
spring:
  redis:
    ################### redis 单机版 start ##########################
    host: 144.131.246.146
    port: 6379
    timeout: 6000
    database: 2
    lettuce:
      pool:
        max-active: 10 # 连接池最大连接数（使用负值表示没有限制）,如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)
        max-idle: 8   # 连接池中的最大空闲连接 ，默认值也是8
        max-wait: 100 # # 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
        min-idle: 2    # 连接池中的最小空闲连接 ，默认值也是0
      shutdown-timeout: 100ms
  cloud:
    gateway:
#      filter:
#        request-rate-limiter:
#          empty-key-status-code: 5555
#          deny-empty-key: false
      httpclient:
        ssl:
          use-insecure-trust-manager: true
      routes:
      - id: before_route
        uri: https://example.org
        predicates:
        - Path=/testBefore/**
        - Before=2020-11-01T10:10:32.201+08:00[Asia/Shanghai]
      - id: after_route
        uri: https://example.org/
        predicates:
        - Path=/testAfter/**
        - After=2020-11-01T10:10:44.201+08:00[Asia/Shanghai]
      - id: between_route
        uri: https://example.org/
        predicates:
        - Path=/testBetween/**
        - Between=2020-11-01T12:49:48.201+08:00[Asia/Shanghai],2020-11-01T12:50:50.201+08:00[Asia/Shanghai]
      - id: cookie_route
        uri: https://example.org/
        predicates:
        - Path=/testCookie/**
        - Cookie=username,cwx491
      - id: header_route
        uri: https://example.org/
        predicates:
        - Path=/testHeader/**
        - Header=myHeader,^[0-9]*$
      - id: host_route
        uri: https://example.org/
        predicates:
          - Path=/testHost/**
          - Host=**.cwx.cc.com:8080,**.cwx.cc.net:8080
      - id: method_route
        uri: https://example.org/
        predicates:
          - Path=/testMethod/**
          - Method=GET
      - id: path_route
        uri: https://example.org/
        predicates:
          - Path=/testPath/info,/testPath/{id},/testPath/**
      - id: query_route
        uri: https://example.org/
        predicates:
          # 要求存在名为“id”的请求参数，且全为数字组成
          - Query=id,^[0-9]*$
          # 要求存在名为aa的请求参数
          - Query=aa
      - id: remoteAddr_route
        uri: https://example.org/
        predicates:
          - Path=/testRemoteAddr/**
          - RemoteAddr=192.168.75.0/0,192.168.75.0/32
      - id: weight_high_route
        uri: https://example.org/
        predicates:
          - Path=/testWeight/**
          - Weight=myGoroup,80
      - id: weight_low_route
        uri: https://www.springcloud.cc/
        predicates:
          - Path=/testWeight/**
          - Weight=myGoroup,20
      - id: addRequestHeader_route
        uri: https://example.org/
        predicates:
          - Path=/testAddRequestHeader/**
        fiters:
          - AddRequestHeader=id,1
      - id: addRequestParameter_route
        uri: https://example.org/
        predicates:
          - Path=/testAddRequestParameter/**
        filters:
          - AddRequestParameter=id,1
      - id: addResponseHeader_route
        uri: https://example.org/
        predicates:
          - Path=/testAddResponseHeader/**
        filters:
          - AddResponseHeader=id,1
      - id: retry_route
        uri: https://example.org/
        predicates:
        - Path=/testRetry/**
        filters:
        - name: Retry
          args:
            retries: 2
            methods: GET,POST
            statuses: INTERNAL_SERVER_ERROR,BAD_REQUEST
            series: SERVER_ERROR
      - id: hystrix_route
        uri: https://xxxx.com/
        predicates:
          - Path=/testHystrix/**
        filters:
          - name: Hystrix
            args:
              name: hystrix
              fallbackUri: forward:/hystrixfallback
      - id: ratelimit_route
        uri: https://example.org/
        predicates:
          - Path=/testRateLimit/**
        filters:
          - name: RequestRateLimiter
            args:
              rate-limiter: "#{@redisRateResolver}"
#              redis-rate-limiter.replenishRate: 10  # 令牌桶的容积 允许用户每秒处理多少个请求。即：每秒发放的令牌数量
#              redis-rate-limiter.burstCapacity: 20  # 流速 每秒 令牌桶的容量，允许在 1s 内完成的最大请求数。即：令牌桶容量
              key-resolver: "#{@userKeyResolver}"
      - id: stripprefix_route
        uri: https://example.org/
        predicates:
          - Path=/aa/bb/**
        filters:
          - StripPrefix=2
      - id: rewitepath_route
        uri: https://example.org/
        predicates:
          - Path=/testRewritePath/**
        filters:
          - RewritePath=/testRewritePath/aa,/bb
      - id: setstatus_route
        uri: https://example.org/
        predicates:
          - Path=/setStatus/**
        filters:
          - SetStatus=BAD_REQUEST
